<BasicBtn@Button>:
    background_basic: ''
    background_color: [1,1,1,1]
    color: [0,0,0,1]
    bold: True
    font_size: 20

<Advanced>:
    canvas.before:
        Color:
            rgba: rgba('#E4FAFF')
        Rectangle:
            size: self.size
            pos: self.pos
        Color:
            rgba: rgba("#FFFFFF")
        Rectangle:
            size: self.width, root.height*0.36
            pos: self.pos
        Color:
            rgba: rgba("#FFFFFF")
        Ellipse:
            size: root.width, root.height*0.5468
            pos: root.width*0.05,  root.height*0.07
        Color:
            rgba: rgba("#FFFFFF")
        Ellipse:
            size: root.width*0.92, root.height*0.46875
            pos:-(root.width/2),  root.height*0.17

    BoxLayout:
        size_hint: 1, .36
        pos_hint: {'top':0.36}
        orientation: 'vertical'
        spacing: 10
        padding: 5
        GridLayout:
            rows: 1
            spacing: root.width*0.05
            BasicBtn:
                text: '7'
                on_release:
                    txt2.text+= self.text
                    
            BasicBtn:
                text: '8'
                on_release:
                    txt2.text+= self.text
            BasicBtn:
                text: '9'
                on_release:
                    txt2.text+= self.text
            BasicBtn:
                id: open_pre
                text: '('
                background_color: [0 ,0.6156862745 ,1 ,1]
                # on_release:
                #     txt2.text= txt2.text+'(' if ( txt2.text=='' or txt2.text[-1]!='(' or txt2.text[-1]!=')' or txt2.text[-1]=='+' or txt2.text[-1]=='-' or txt2.text[-1]=='*' or txt2.text[-1]=='/') else txt2.text
                #     self.disabled=True
            BasicBtn:
                text: ')'
                background_color: [0 ,0.6156862745 ,1 ,1]
                # on_press:
                #     app.store(txt2.text[txt2.text[]])
                # on_release:
                #    txt2.text= txt2.text+')' if ( txt2.text[-1]!=')' or txt2.text[-1]!='+' or txt2.text[-1]!='-' or txt2.text[-1]!='*' or txt2.text[-1]!='/') else txt2.text
                #    open_pre.disabled=False
            BasicBtn:
                text: '+'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_press:
                   # txt2.text+='+'
                    app.operate(txt2.text, "+")
                on_release:
                    txt2.text= ''
        GridLayout:
            rows: 1
            spacing: root.width*0.05
            BasicBtn:
                text: '4'
                on_release:
                    txt2.text+= self.text
            BasicBtn:
                text: '5'
                on_release:
                    txt2.text+= self.text
            BasicBtn:
                text: '6'
                on_release:
                    txt2.text+= self.text
            BasicBtn:
                size_hint_x: (8*100)/root.width 
                text: 'x10^2'
                background_color: [0, 0,0 ,1]
                color: [1,1,1,1]
                on_release:
                    app.powerten2(txt2, txt2.text)
            BasicBtn:
                text: '-'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_press:
                   # txt2.text+='-'
                    app.operate(txt2.text, "-")
                on_release:
                    txt2.text= ''
        GridLayout:
            rows: 1
            spacing: root.width*0.05
            BasicBtn:
                text: '1'
                on_release:
                    txt2.text+= self.text
            BasicBtn:
                text: '2'
                on_release:
                    txt2.text+= self.text
            BasicBtn:
                text: '3'
                on_release:
                    txt2.text+= self.text            
            BasicBtn:
                text: 'x10^3'
                size_hint_x: (8*100)/root.width 
                background_color: [0, 0,0 ,1]
                color: [1,1,1,1]
                on_release:
                    app.powerten3(txt2, txt2.text)
            BasicBtn:
                text: 'x'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_press:
                    #txt2.text+= "*"
                    app.operate(txt2.text, "x")
                on_release:
                    txt2.text= ''
        GridLayout:
            rows: 1
            spacing: root.width*0.05
            BasicBtn:
                text: '.'
                on_release:
                    txt2.text= txt2.text+'.' if txt2.text.count('.') == 0 else txt2.text
            BasicBtn:
                text: '0'
                on_release:
                    txt2.text+= self.text
            BasicBtn:
                text: '='
                background_color: [0, 0,0 ,1]
                color: [0 ,0.6156862745 ,1 ,1]
                on_press:
                    app.get_res(txt2.text, txt2, "a") if txt2.text!='' else app.errors('enter the operation first!')

            BasicBtn:
                text: '+/-'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_release:
                    app.make_it_n(txt2.text, txt2)
            BasicBtn:
                text: '%'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_press:
                    app.operate(txt2.text, "%")
                on_release:
                    txt2.text= ''
            BasicBtn:
                text: '/'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_press:
                   # txt2.text+='/'
                    app.operate(txt2.text, "/")
                on_release:
                    txt2.text= ''
    BoxLayout:
        txt2: txt2
        size_hint: .6, 0.16
        pos_hint: {'top':0.53}
        orientation: 'vertical'
        spacing: 8
        padding: [5,0,0,0]
        GridLayout:
            spacing: 4
            rows:1
            BasicBtn:
                text: 'D[color=#FFFFFF]/[/color]R'
                markup: True
                background_color: [0 ,0, 0,1]
                color: [0 ,0.6156862745 ,1 ,1]
                on_release:
                    app.d_r(txt2, txt2.text, 1)
            BasicBtn:
                text: '|#|'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_release:
                    app.make_ad_operation(txt2, txt2.text, 'abs')
            BasicBtn:
                text: 'Pi'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_release:
                    txt2.text+='3.14'
            BasicBtn:
                text: 'log'
                background_color: [0 ,0.6156862745 ,1 ,1]  
                on_release:
                    app.make_ad_operation(txt2, txt2.text, 'log') if txt2.text!='' else app.errors('enter a number first!')
        GridLayout:
            rows:1
            spacing: 4
            BasicBtn:
                text: 'root of'
                background_color: [0 ,0.6156862745 ,1 ,1]
                font_size: 14
                on_release:
                    app.make_ad_operation(txt2, txt2.text, 'root') if txt2.text!='' else app.errors('enter a number first!')
            BasicBtn:
                text: '#^#'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_press:
                    app.operate(txt2.text, "^") if txt2.text!='' else app.errors('enter a number first!')
                on_release:
                    txt2.text=''
            BasicBtn:
                text: '#^2'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_release:
                    app.make_ad_operation(txt2, txt2.text, 'po2') if txt2.text!='' else app.errors('enter a number first!')
            BasicBtn:
                text: '#^3'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_release:
                    app.make_ad_operation(txt2, txt2.text, 'p3') if txt2.text!='' else app.errors('enter a number first!')
        GridLayout:
            rows:1
            spacing: 4
            BasicBtn:
                text: 'sin'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_release:
                    app.make_ad_operation(txt2, txt2.text, 'sin') if txt2.text!='' else app.errors('enter a number first!')
            BasicBtn:
                text: 'cos'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_release:
                    app.make_ad_operation(txt2, txt2.text, 'cos') if txt2.text!='' else app.errors('enter a number first!')
            BasicBtn:
                text: 'tan'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_release:
                    app.make_ad_operation(txt2, txt2.text, 'tan') if txt2.text!='' else app.errors('enter a number first!')
            BasicBtn:
                text: 'exp'
                background_color: [0 ,0.6156862745 ,1 ,1]
                on_release:
                    app.make_ad_operation(txt2, txt2.text, 'exp') if txt2.text!='' else app.errors('enter a number first!')
    BoxLayout:
        size_hint: .30, 0.1
        pos_hint: {'x':0.684, 'top':0.469}
        orientation: 'vertical'
        spacing: 8
        BasicBtn:
            text: 'Delete'
            background_color: [0,0,0,1]
            color: [1,1,1,1]
            on_release:
                txt2.text= txt2.text[:-1]
        BasicBtn:
            text: 'Clear'
            background_color: [1,0,0,1]
            color: [1,1,1,1]
            on_release:
                txt2.text= ''
    # MDTopAppBar:
    #     title: 'Advanced Calculator'
    #     md_bg_color: [0,0,0,1]
    #     pos_hint: {'top':1}
    #     size_hint_y: .08
    #     elevation: 10
    #     left_action_items: [['arrow-left', lambda x: app.go_to_home(txt2)]]

    
    MDTopAppBar:
        title: "KIA MATH"
        use_overflow: True
        md_bg_color: [0,0,0,1]
        pos_hint: {'top':1}
        size_hint_y: .08
        elevation: 10
        right_action_items:
            [
            ["calculator-variant", lambda x: app.go_to_home(txt2), "Basic", "Basic Calculator"],
            ["calculator", lambda x:  app.change_to_advanced(), "Advanced", "Advanced calculator"],
            ["message-question", lambda x: app.callback(x), "Message question", "Message question"],
            ["history", lambda x: app.callback(x), "Message reply", "Message reply"],
            ]


 
    MDTextFieldRect:
        id: txt2
        size_hint: (227/240), (90/640)
        pos_hint: {'x':(49/1800) ,'top':1-(72/640)}
        multiline: False
        align: 'center'
        font_size: '25sp'
        bold: True
        readonly: True
        #disabled: True
        font_style: 'Roboto'
        hint_text: 'math problem...'
        hint_text_color: [0,0,0,1]
        background_basic: ""
        background_color: [1,1,1,1]

